#############################################################################
# Makefile for building: PCwars
# Generated by qmake (2.01a) (Qt 4.7.4) on: mar. mai 8 17:25:51 2012
# Project:  PCwars.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile PCwars.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = batiment.cpp \
		carte.cpp \
		case.cpp \
		fenetre.cpp \
		gchargement.cpp \
		general.cpp \
		ginitjeu.cpp \
		gjeu.cpp \
		gmenu.cpp \
		goptions.cpp \
		joueur.cpp \
		main.cpp \
		menu.cpp \
		options.cpp \
		unite.cpp moc_fenetre.cpp \
		moc_gchargement.cpp \
		moc_gjeu.cpp
OBJECTS       = batiment.o \
		carte.o \
		case.o \
		fenetre.o \
		gchargement.o \
		general.o \
		ginitjeu.o \
		gjeu.o \
		gmenu.o \
		goptions.o \
		joueur.o \
		main.o \
		menu.o \
		options.o \
		unite.o \
		moc_fenetre.o \
		moc_gchargement.o \
		moc_gjeu.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		PCwars.pro
QMAKE_TARGET  = PCwars
DESTDIR       = 
TARGET        = PCwars

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: PCwars.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile PCwars.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile PCwars.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/PCwars1.0.0 || $(MKDIR) .tmp/PCwars1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/PCwars1.0.0/ && $(COPY_FILE) --parents batiment.h carte.h case.h fenetre.h gchargement.h general.h ginitjeu.h gjeu.h gmenu.h goptions.h joueur.h menu.h options.h unite.h listeCartes.cpp .tmp/PCwars1.0.0/ && $(COPY_FILE) --parents batiment.cpp carte.cpp case.cpp fenetre.cpp gchargement.cpp general.cpp ginitjeu.cpp gjeu.cpp gmenu.cpp goptions.cpp joueur.cpp main.cpp menu.cpp options.cpp unite.cpp .tmp/PCwars1.0.0/ && (cd `dirname .tmp/PCwars1.0.0` && $(TAR) PCwars1.0.0.tar PCwars1.0.0 && $(COMPRESS) PCwars1.0.0.tar) && $(MOVE) `dirname .tmp/PCwars1.0.0`/PCwars1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/PCwars1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_fenetre.cpp moc_gchargement.cpp moc_gjeu.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_fenetre.cpp moc_gchargement.cpp moc_gjeu.cpp
moc_fenetre.cpp: gmenu.h \
		menu.h \
		goptions.h \
		options.h \
		ginitjeu.h \
		general.h \
		unite.h \
		gjeu.h \
		carte.h \
		batiment.h \
		case.h \
		joueur.h \
		gchargement.h \
		fenetre.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) fenetre.h -o moc_fenetre.cpp

moc_gchargement.cpp: gchargement.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gchargement.h -o moc_gchargement.cpp

moc_gjeu.cpp: carte.h \
		batiment.h \
		case.h \
		general.h \
		unite.h \
		joueur.h \
		goptions.h \
		options.h \
		menu.h \
		gjeu.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gjeu.h -o moc_gjeu.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

batiment.o: batiment.cpp batiment.h \
		case.h \
		general.h \
		unite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o batiment.o batiment.cpp

carte.o: carte.cpp carte.h \
		batiment.h \
		case.h \
		general.h \
		unite.h \
		joueur.h \
		listeCartes.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o carte.o carte.cpp

case.o: case.cpp case.h \
		general.h \
		unite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o case.o case.cpp

fenetre.o: fenetre.cpp fenetre.h \
		gmenu.h \
		menu.h \
		goptions.h \
		options.h \
		ginitjeu.h \
		general.h \
		unite.h \
		gjeu.h \
		carte.h \
		batiment.h \
		case.h \
		joueur.h \
		gchargement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fenetre.o fenetre.cpp

gchargement.o: gchargement.cpp gchargement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gchargement.o gchargement.cpp

general.o: general.cpp general.h \
		unite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o general.o general.cpp

ginitjeu.o: ginitjeu.cpp ginitjeu.h \
		options.h \
		menu.h \
		general.h \
		unite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ginitjeu.o ginitjeu.cpp

gjeu.o: gjeu.cpp gjeu.h \
		carte.h \
		batiment.h \
		case.h \
		general.h \
		unite.h \
		joueur.h \
		goptions.h \
		options.h \
		menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gjeu.o gjeu.cpp

gmenu.o: gmenu.cpp gmenu.h \
		menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gmenu.o gmenu.cpp

goptions.o: goptions.cpp goptions.h \
		options.h \
		menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o goptions.o goptions.cpp

joueur.o: joueur.cpp joueur.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o joueur.o joueur.cpp

main.o: main.cpp fenetre.h \
		gmenu.h \
		menu.h \
		goptions.h \
		options.h \
		ginitjeu.h \
		general.h \
		unite.h \
		gjeu.h \
		carte.h \
		batiment.h \
		case.h \
		joueur.h \
		gchargement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

menu.o: menu.cpp menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o menu.o menu.cpp

options.o: options.cpp options.h \
		menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o options.o options.cpp

unite.o: unite.cpp unite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o unite.o unite.cpp

moc_fenetre.o: moc_fenetre.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fenetre.o moc_fenetre.cpp

moc_gchargement.o: moc_gchargement.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gchargement.o moc_gchargement.cpp

moc_gjeu.o: moc_gjeu.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gjeu.o moc_gjeu.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

